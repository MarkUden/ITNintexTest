import { html,LitElement,Task} from 'https://cdn.jsdelivr.net/gh/lit/dist@2/all/lit-all.min.js';

// define the component
export class SonWebserviceTest2 extends LitElement {
  @property() inputParameter?: string;
  
  static properties = {
    stringOutput: {type: String},
  };
  
  // return a promise for contract changes.
  static getMetaConfig() {
    return {
      controlName: 'Son Webservice Test',
      fallbackDisableSubmit: false,
      version: '1.2',
      properties: {
        stringOutput: {
          type: 'string',
          title: 'stringOutput',
          description: 'Sonardyne'
        }
      }
    };
  }
  
  constructor() {
    super();
    this.stringOutput = 'World';
  }

  private _wsCall = new Task(this, {
    task: async ([inputParameter], {signal}) => {
      const response = await fetch(`https://dummyjson.com/carts`, {signal});
      if (!response.ok) { throw new Error(response.status); }
      return response.text() as Output;
    },
    args: () => [this.inputParameter]
  });

  render() {
    return this._wsCall.render({
      pending: () => html`<p>calling web service...</p>`,
      complete: (Output) => html`
          <p>${Output.price}</p>
        `,
      error: (e) => html`<p>Error: ${e}</p>`
    });
  }
}

// registering the web component
const elementName = 'son-webservice-test2';
customElements.define(elementName, SonWebserviceTest2);

